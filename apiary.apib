FORMAT: 1A
HOST: http://api.transpoetika.org/v1

# Transpoetika SLaWS API
Transpoetika API is a Serbian Lexical Web Service (SLaWS) developed at the Belgrade Center for Digital Humanities. 

This is a work in progress and subject to significant change.

##http vs. https?
Will use https. Not set up yet.

##Content-Type Negotiation
Transpoetika API supports both XML and JSON via a content negotiation mechanism using HTTP headers.
The client must send an appropriate Accept header (either application/json or application/xml) with each call. 
Calls without an Accept header result in an error.

The same values should be used in the Content-Type HTTP header when submitting data in the request body 
(POST and PUT methods). 

*Note*: `POST` and `PUT` methods are not implemented yet.

##Data vs. Metadata?

The Transpoetika API distinguishes between the actual data returned in the body of the reponse (e.g. word forms, morphosyntactic annotation etc.) and resource metadata (e.g. limits, offsets etc.) which will returned in the HTTP header.

In this intitial development stage, we will use custom HTTP headers for pagination etc. but are likely to eventually opt for the Link header in accordance with [RFC5988](http://tools.ietf.org/html/rfc5988#page-6).

## Ekavian vs. Jekavian

Don't have a separate parameter yet. Need to think about it more. 

# Forms [/forms/{wordForm}?fields=limit,offset,paradigm,transliterate,strict,created_since,modified_since,id,form,lemma,ana]
Resources representing formographic forms, lemmas and
morphsyntactic specifications of individual word forms.

# Retrieve All Forms [GET]

+ Parameters

    + wordForm (optional, string) ... The requested wordForm. If no form provided, then all forms from the db are returned, taking however into consideration limits and offsets. (We will have to impose maximum limits etc. but we can deal with that later when we introduce authentication etc.
    + limit = `10` (optional, number) ... The maximum number of results to return.
    + offset = `0` (optional, number) ... The pagination of results to return.
    + paradigm = `false` (optional, boolean) ... By default, the system will return the results for a particular `{wordForm}` as requested. If true, it will return a full paradigm of the `{wordForm}` instead.  
    > `/forms/руке?paradigm=false` => руке (gen. sg), руке (nom. pl.), руке (acc. pl.)
    > 
    > `/forms/руке?paradigm=true` => рука, руке, руци, руку etc. 
    >
    
    + transliterate = `false` (optional, boolean) ... Transliterate the `wordForm` from Latin to Cyrillic.
    + strict = `true` (optional, boolean) ... If transliterate is set to `true` and strict is set to `false`, the system will try to match and offer results for loose transliteration:
    > `/forms/reci?transliterate=true&strict=true` => реци
    > 
    > `/forms/reci?transliterate=true&strict=false`  => реци, рећи, речи. 
    >
    + created_since = `0` (optional, number) ... Either zero or the Unix timestamp.
    + modified_since = `0` (optional, number) ... Either zero or the Unix timestamp.
    + id = `true` (optional, boolean) ... Include the id of the form in the response. 
    + form = `true` (optional, boolean) ... Include the form in the response.
    + lemma = `true` (optional, boolean) ... Include the lemma of the form in the response. 
    + ana = `true` (optional, boolean) ... Include the morphosyntactic analysis of the form in the response. 


+ Response 200 (application/json)
    
    + Headers

                X-Total-Count: 14
                X-Limit: 10
                X-Offset: 0
           
    + Body

            [
                {
                    "id": 1, 
                    "form": "руке", 
                    "lemma": "рука",     
                    "ana": "Ngsjdjf"
                }, {
                    "id": 2, 
                    "form": "руке", 
                    "lemma": "рука",     
                    "ana": "Nnpkdjf"
                }
            ]

+ Response 200 (application/xml)
    
    + Headers
            
                X-Total-Count: 14
                X-Limit: 10
                X-Offset: 0

    + Body

            <data>
                <forms>
                    <id>1</id>
                    <form>руке</form>
                    <lemma>рука</lemma>
                    <ana>Nasjdjf</ana>
                </forms>
                <forms>
                    <id>2</id>
                    <form>руке</form>
                    <lemma>рука</lemma>
                    <ana>Nnpkdjf</ana>
                </forms>
            </data>


+ Response 400 

    Indicates a bad request (e.g. wrong parameter, missing accept header etc.)

    + Body 
    
+ Response 404

    The requested word form does not exist in the database.
    
    + Body
    
+ Response 503

    The server is currently unable to handle the request.
    
    + Body
